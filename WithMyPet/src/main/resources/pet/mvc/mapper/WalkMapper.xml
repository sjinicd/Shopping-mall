<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pet.mvc.mapper.WalkMapper">
	
	<select id="getList" resultType="Walk" parameterType="WalkListVo">
		select * from (select ROWNUM rnum, a.* from (select * from WALK where WALK_DATE > SYSDATE 
		
		<if test="keyword != null and !keyword.equals('')">
			<choose>
				<when test="orderType.equals('all')">
				and ((WALK_SUBJECT like '%'||#{keyword}||'%')
				or (WALK_LOCATION like '%'||#{keyword}||'%')
				or (WALK_CONTENT like '%'||#{keyword}||'%'))
				</when>
				<when test="orderType.equals('location')">
				and WALK_LOCATION like '%'||#{keyword}||'%'
				</when>
				<when test="orderType.equals('subejct')">
				and WALK_SUBJECT like '%'||#{keyword}||'%'
				</when>
				<otherwise>
				and WALK_CONTENT like '%'||#{keyword}||'%'
				</otherwise>
			</choose>
		</if>
		 order by WALK_DATE) a
		) where <![CDATA[ rnum>#{startRow} and rnum<=#{endRow} ]]>
	</select>
	
	<select id="totalWalk" resultType="Long" parameterType="map">
	  select count(*) from
	    <if test="keyword != null and !keyword.equals('')">
	  		(select * from WALK where
	  		 WALK_DATE > SYSDATE and
			 ((WALK_LOCATION like '%'||#{keyword}||'%') or (WALK_SUBJECT like '%'||#{keyword}||'%'))
			)
		</if>
		WALK where WALK_DATE > SYSDATE
	</select>
	
	<insert id="insertWalk" parameterType="Walk">
		<selectKey resultType="long" keyProperty="walk_idx" order="BEFORE">
			select walk_SEQ.nextval from dual
		</selectKey>
    	insert into WALK values(
	    #{walk_idx},#{member_number},#{walk_writer},#{walk_type},#{walk_subject}, 
	    #{walk_content},SYSDATE,#{walk_count},#{walk_location},#{walk_date})
    </insert>
    
    <select id="getWalk" resultType="Walk" parameterType="long">
     	select * from WALK where WALK_IDX=#{idx}
    </select>
    
    <select id="getWalkCmt" resultType="WalkComment" parameterType="Long">
    	select * from WALK_CMT where WALK_IDX=#{idx} and JOIN_STATUS is null
    </select>
    
    <select id="getWalkCmtData" resultType="WalkComment" parameterType="Long">
    	select * from WALK_CMT where WALK_CMT_IDX=#{idx}
    </select>
    
    <delete id="walkDelete" parameterType="Long">
    	delete from WALK where WALK_IDX=#{idx}
    </delete>
    
    <insert id="insertWalkCmt" parameterType="WalkComment">
    	insert into WALK_CMT values(
	    WALK_CMT_SEQ.nextval, #{walk_idx}, #{walk_cmt_writer},
	    #{walk_cmt_content}, SYSDATE, #{member_number},null)
    </insert>
    
    <update id="walkUpdate" parameterType="Walk">
	   update WALK set WALK_TYPE=#{walk_type}, WALK_SUBJECT=#{walk_subject}, WALK_CONTENT=#{walk_content},
	   WALK_LOCATION=#{walk_location}, WALK_DATE=#{walk_date}
	   where WALK_IDX=#{walk_idx}
	</update>
	
	<insert id="insertWalkJoin" parameterType="joinVo">
    	insert into WALK_JOIN values(#{walk_idx}, #{member_number}, null)
    </insert>
    
    <select id="selectByCmtIdx" parameterType="long" resultType="long">
    	select MEMBER_NUMBER from WALK_CMT where WALK_CMT_IDX=#{cmtIdx}
    </select>
    
    <update id="updateWalkCmt" parameterType="long">
    	update WALK_CMT set JOIN_STATUS='y' where WALK_CMT_IDX=#{cmtIdx}
    </update>
    
    <select id="getJoinCmt" parameterType="long" resultType="WalkComment">
    	select * from WALK_CMT where WALK_IDX =#{idx} and JOIN_STATUS='y'
    </select>
    
    <select id="getWalkLike" parameterType="long" resultType="int">
    	select count(*) from walk_like where WALK_IDX=#{idx}
    </select>
    
    <insert id="addHeart" parameterType="map">
    	insert into WALK_LIKE values( #{walk_idx}, #{member_number} )
    </insert>
    
    <delete id="deleteHeart" parameterType="map">
    	delete from WALK_LIKE where walk_idx = #{walk_idx} and member_number = #{member_number}
    </delete>
    
    <select id="checkJoin" parameterType="joinVo" resultType="int">
    	select count(*) from WALK_JOIN where WALK_IDX=#{walk_idx} and MEMBER_NUMBER=#{member_number}
    </select>
    
    <select id="checkCmt" parameterType="joinVo" resultType="int">
    	select count(*) from WALK_CMT where WALK_IDX=#{walk_idx} and MEMBER_NUMBER=#{member_number}
    </select>
    
    <select id="getCmtPetData" parameterType="long" resultType="pet.member.vo.MypagePetVO">
    	SELECT pet_name, pet_sex,
		  <![CDATA[CASE WHEN TRUNC(SYSDATE) - pet_age <= 30 THEN
	                 TRUNC(SYSDATE) - pet_age + 1 || '일'
	            WHEN MONTHS_BETWEEN(TRUNC(SYSDATE), pet_age) < 12 THEN
	                 TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), pet_age)) || '개월'
	            ELSE
	                 TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), pet_age) / 12 ) || '살'
	       END pet_age,
	      pet_walkarea,
	      pet_walkpoint,
	      pet_fname,
	      pet_ofname,
	      pet_fsize
	      FROM PET_MYPAGE
	      WHERE member_number= #{member_number}]]>
    </select>
    
    <select id="getMemData" parameterType="long" resultType="pet.member.vo.MemberVO">
    	select * from MEMBER where MEMBER_NUMBER = #{member_number}
    </select>
    
    <select id="getDetailData" parameterType="long" resultType="DetailMemberData">
    	select a.*, b.REVIEW, c.FOLLOWING, c.FOLLOWER from
		(   select 
		    MEMBER_NUMBER,
		    max(WALK_DATE) keep ( dense_rank first order by (SYSDATE-WALK_DATE)) as walk_date,
		    count(*) as WALK_COUNT
		    from WALK
		    group by MEMBER_NUMBER
		) a,(
		    select 
		    MEMBER_NUMBER,
		    max(MEMBER_REVIEW) keep ( dense_rank first order by (SYSDATE-SENDDATE)) as REVIEW
		    from MEMBER_REVIEW
		    group by MEMBER_NUMBER
		) b,(
		    select aa.MEMBER_NUMBER, aa.FOLLOWING, nvl(bb.FOLLOWER,0) FOLLOWER 
		    from
		    (
		        select MEMBER_NUMBER, count(*) as FOLLOWING 
		        from FOLLOW
		        group by MEMBER_NUMBER
		    ) aa left join (
		        select target_MEMBER_NUMBER, count(*) as FOLLOWER 
		        from FOLLOW 
		        group by target_MEMBER_NUMBER
		    ) bb
		    on aa.MEMBER_NUMBER = bb.target_MEMBER_NUMBER (+)
		)c
		where (a.MEMBER_NUMBER = b.MEMBER_NUMBER and a.MEMBER_NUMBER = c.MEMBER_NUMBER)
		and a.MEMBER_NUMBER = #{member_number}
    </select>
    
    <select id="checkLikeToggle" resultType="long" parameterType="map">
    	select count(*) from WALK_LIKE where WALK_IDX = #{walk_idx} and MEMBER_NUMBER = #{member_number}
    </select>
    
    <select id="getWalkPic" resultType="String" parameterType="long">
    	select PET_FNAME from PET_MYPAGE where MEMBER_NUMBER = #{member_number}
    </select>

</mapper>